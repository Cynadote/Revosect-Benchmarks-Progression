const advancedRanks = {
  900: "Grandmaster",
  1000: "Nova",
  1100: "Astra",
  1200: "Celestial",
};
const advancedEnergy = [800, 900, 1000, 1100, 1200];

// const angleshot = {
//   id: "CsLevel.VT Empyrean.VT mpXY .R7WQSA",
//   weapon: "Custom_VTnoADS",
//   name: "VT Angleshot Advanced",
//   category: "Clicking",
//   subCategory: "Dynamic",
//   scores: [680, 850, 1020, 1100, 1140],
// };

// let user = {
//   avgAcc: 69.86334923335484,
//   avgScore: 650.5,
//   count: 28,
//   id: "CsLevel.VT Empyrean.VT mpXY .R7WQSA",
//   maxScore: 780,
//   name: "VT Angleshot Advanced",
// };

// let myEnergy = calculateRank(
//   angleshot,
//   user,
//   advancedEnergy,
//   advancedRanks
// );

// console.log(myEnergy);
let player = [
  {
    id: "CsLevel.VT Empyrean.VT mpXY .R7WQSA",
    weapon: "Custom_VTnoADS",
    name: "VT Angleshot Advanced",
    category: "Clicking",
    subCategory: "Dynamic",
    categoryID: 1,
    scenarioID: 1,
    scores: [680, 850, 1020, 1100, 1140],
    avgAcc: 69.86334923335484,
    count: 28,
    maxScore: 780,
    avgScore: 650.5,
    energy: 858,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Sky C.R7164L",
    weapon: "Custom_VTnoADS",
    name: "VT Waveshot Advanced",
    category: "Clicking",
    subCategory: "Dynamic",
    categoryID: 1,
    scenarioID: 2,
    scores: [680, 880, 1050, 1140, 1200],
    avgAcc: 71.16906668923117,
    count: 11,
    maxScore: 698,
    avgScore: 620.9090909090909,
    energy: 809,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Arc 1.R7WRND",
    weapon: "Custom_VTnoADS",
    name: "VT Arcshot Advanced",
    category: "Clicking",
    subCategory: "Dynamic",
    categoryID: 1,
    scenarioID: 3,
    scores: [750, 900, 1050, 1250, 1300],
    avgAcc: 68.11665344238281,
    count: 3,
    maxScore: 627,
    avgScore: 591,
    energy: 668,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Three.R7WSTK",
    weapon: "Custom_VTnoADS",
    name: "VT Fourshot Wide Advanced",
    category: "Clicking",
    subCategory: "Static",
    categoryID: 2,
    scenarioID: 4,
    scores: [1450, 1550, 1650, 1750, 1825],
    avgAcc: 92.35357775006976,
    count: 7,
    maxScore: 1607,
    avgScore: 1522,
    energy: 957,
    rank: "Grandmaster",
  },
  {
    id: "CsLevel.VT Empyrean.VT Twosh.R7WTAX",
    weapon: "Custom_VTnoADS",
    name: "VT Threeshot Advanced",
    category: "Clicking",
    subCategory: "Static",
    categoryID: 2,
    scenarioID: 5,
    scores: [1150, 1250, 1350, 1500, 1580],
    avgAcc: 91.436396484375,
    count: 25,
    maxScore: 1525,
    avgScore: 1313.04,
    energy: 1131,
    rank: "Astra",
  },
  {
    id: "CsLevel.VT Empyrean.VT Multi.R7WTKS",
    weapon: "Custom_VTnoADS",
    name: "VT Multishot 180 Advanced",
    category: "Clicking",
    subCategory: "Static",
    categoryID: 2,
    scenarioID: 6,
    scores: [1400, 1500, 1600, 1700, 1750],
    avgAcc: 92.36945343017578,
    count: 3,
    maxScore: 1516,
    avgScore: 1428.6666666666667,
    energy: 916,
    rank: "Grandmaster",
  },
  {
    id: "CsLevel.canner.VT Suave.R9N6JI",
    weapon: "Custom_VoltaicZapper",
    name: "VT Suavetrack Advanced",
    category: "Tracking",
    subCategory: "Precise",
    categoryID: 3,
    scenarioID: 7,
    scores: [3100, 3600, 4100, 4300, 4550],
    avgAcc: 53.23111894395616,
    count: 36,
    maxScore: 3493,
    avgScore: 3099.8888888888887,
    energy: 878,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Preci.R7ZK29",
    weapon: "Custom_VoltaicZapper",
    name: "VT Steadytrack Advanced",
    category: "Tracking",
    subCategory: "Precise",
    categoryID: 3,
    scenarioID: 8,
    scores: [2450, 3000, 3550, 3900, 4100],
    avgAcc: 29.71304702758789,
    count: 1,
    maxScore: 1781,
    avgScore: 1781,
    energy: 581,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Mini .R7ZKQO",
    weapon: "Custom_VoltaicZapper",
    name: "VT Minitrack Advanced",
    category: "Tracking",
    subCategory: "Precise",
    categoryID: 3,
    scenarioID: 9,
    scores: [2000, 2600, 3200, 3600, 3850],
    avgAcc: 0,
    count: 0,
    maxScore: 0,
    avgScore: 0,
    energy: 0,
    rank: "Unranked",
  },
  {
    id: "CsLevel.zcr.VT React.R8CNGN",
    weapon: "Custom_VoltaicZapper",
    name: "VT Blinktrack Advanced",
    category: "Tracking",
    subCategory: "Reactive",
    categoryID: 4,
    scenarioID: 10,
    scores: [2200, 2500, 2800, 3000, 3200],
    avgAcc: 0,
    count: 0,
    maxScore: 0,
    avgScore: 0,
    energy: 0,
    rank: "Unranked",
  },
  {
    id: "CsLevel.zcr.VT Pillt.R8DF2N",
    weapon: "Custom_VoltaicZapper",
    name: "VT Pilltrack Advanced",
    category: "Tracking",
    subCategory: "Reactive",
    categoryID: 4,
    scenarioID: 11,
    scores: [3000, 3300, 3600, 3900, 4000],
    avgAcc: 48.11636245250702,
    count: 32,
    maxScore: 3311,
    avgScore: 2879.96875,
    energy: 903,
    rank: "Grandmaster",
  },
  {
    id: "CsLevel.zcr.VT Airtr.R8D98F",
    weapon: "Custom_VoltaicZapper3",
    name: "VT Spheretrack Advanced",
    category: "Tracking",
    subCategory: "Reactive",
    categoryID: 4,
    scenarioID: 12,
    scores: [4400, 4600, 4800, 5000, 5100],
    avgAcc: 40.609134674072266,
    count: 1,
    maxScore: 3040,
    avgScore: 3040,
    energy: 552,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT evaTS.R7YQ67",
    weapon: "Custom_VoltaicZapper",
    name: "VT Swayswitch Advanced",
    category: "Switching",
    subCategory: "Speed",
    categoryID: 5,
    scenarioID: 13,
    scores: [2500, 2700, 2900, 3100, 3250],
    avgAcc: 34.766666412353516,
    count: 1,
    maxScore: 2086,
    avgScore: 2086,
    energy: 667,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Spher.R89MOR",
    weapon: "Custom_VoltaicZapper",
    name: "VT Sphereswitch Advanced",
    category: "Switching",
    subCategory: "Speed",
    categoryID: 5,
    scenarioID: 14,
    scores: [2200, 2400, 2600, 2750, 2900],
    avgAcc: 0,
    count: 0,
    maxScore: 0,
    avgScore: 0,
    energy: 0,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT berry.R7ZWKV",
    weapon: "Custom_VoltaicZapper",
    name: "VT Skyswitch Advanced",
    category: "Switching",
    subCategory: "Speed",
    categoryID: 5,
    scenarioID: 15,
    scores: [2600, 2900, 3200, 3350, 3450],
    avgAcc: 46.276084899902344,
    count: 12,
    maxScore: 2933,
    avgScore: 2773.25,
    energy: 911,
    rank: "Grandmaster",
  },
  {
    id: "CsLevel.VT Empyrean.VT evaTS.R7ZY84",
    weapon: "Custom_VoltaicZapper",
    name: "VT Dodgeswitch Advanced",
    category: "Switching",
    subCategory: "Evasive",
    categoryID: 6,
    scenarioID: 16,
    scores: [2550, 2750, 3050, 3200, 3250],
    avgAcc: 38.91001319885254,
    count: 2,
    maxScore: 2484,
    avgScore: 2330,
    energy: 779,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Angle.R8AH09",
    weapon: "Custom_VoltaicZapper",
    name: "VT Angleswitch Advanced",
    category: "Switching",
    subCategory: "Evasive",
    categoryID: 6,
    scenarioID: 17,
    scores: [1800, 2100, 2400, 2600, 2650],
    avgAcc: 31.670181655883788,
    count: 30,
    maxScore: 2067,
    avgScore: 1896.8,
    energy: 889,
    rank: "Unranked",
  },
  {
    id: "CsLevel.VT Empyrean.VT Arcsw.R8AOQF",
    weapon: "Custom_VoltaicZapper",
    name: "VT Arcswitch Advanced",
    category: "Switching",
    subCategory: "Evasive",
    categoryID: 6,
    scenarioID: 18,
    scores: [1750, 2000, 2250, 2450, 2550],
    avgAcc: 0,
    count: 0,
    maxScore: 0,
    avgScore: 0,
    energy: 0,
    rank: "Unranked",
  },
];

// let currentCategory = 0;
// let data = [];
// for (let i = 1, j = 1; j <= player.length; j++, i = Math.ceil(j / 3)) {
//   if (player[j - 1].categoryID == i && player[j - 1].energy > currentCategory)
//     currentCategory = player[j - 1].energy;
//   if (j % 3 == 0) {
//     data.push(currentCategory);
//     currentCategory = 0;
//   }
// }

import _ from "lodash";

const grouped = _.groupBy(player, "categoryID");
const energyList = Object.entries(grouped).map(([_, group]) => {
  return Math.max(...group.map(({ energy }) => energy));
});
const harmonicMean = Math.floor(
  6 / energyList.reduce((acc, curr) => acc + 1 / curr, 0)
);

console.log(energyList);
console.log(harmonicMean);
